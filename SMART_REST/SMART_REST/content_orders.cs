//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SMART_REST
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Windows.Forms;

    public partial class content_orders
    {
        public int id_content_order { get; set; }
        public Nullable<int> id_order { get; set; }
        public Nullable<int> id_dish { get; set; }
        public int count_dish { get; set; }
    
        public virtual list_of_dishes list_of_dishes { get; set; }
        public virtual orders orders { get; set; }

        SmartRestaurantEntities db = new SmartRestaurantEntities();

        public bool SaveCont(int? id_ord)   //сохранение 
        {
            try
            {
                var list = new List<content_orders>();
                foreach (content_orders i in ListDishesinOrd)
                {

                    int MaxId;
                    try
                    {
                        MaxId = int.Parse(db.content_orders.Max(p => p.id_content_order).ToString()) + 1;
                    }
                    catch { MaxId = 1; }
                    var content = new content_orders();
                    content.id_content_order = MaxId;
                    content.id_order = db.orders.First(p => p.id_order == id_ord).id_order;
                    content.id_dish = db.list_of_dishes.First(p => p.id_dish == i.id_dish).id_dish;
                    content.count_dish = i.count_dish;
                    list.Add(content);
                    db.content_orders.Add(content);
                    db.SaveChanges();
                }
                return true;
            }
            catch { return false; }
        }
        public List<content_orders> ListDishesinOrd = new List<content_orders>();
        public void ListDihInOrder(int id_dish, int count)
        {
            if (count != 0) 
            {
                var content = new content_orders();

                int MaxId;
                try
                {
                    MaxId = int.Parse(db.content_orders.Max(p => p.id_content_order).ToString()) + 1;
                }
                catch { MaxId = 1; }
                content.id_content_order = MaxId;
                content.id_dish = id_dish;
                content.count_dish = count;
                ListDishesinOrd.Add(content);
            }

          
        }
        public static Dictionary<string, int> list = new Dictionary<string, int>();
 

    }
}
